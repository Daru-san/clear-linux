From 0986b8be8b9fe5baad3d34fc9f687dfedf28e100 Mon Sep 17 00:00:00 2001
From: "Brett T. Warden" <brett.t.warden@intel.com>
Date: Mon, 19 Sep 2022 08:52:45 -0700
Subject: [PATCH] scale

---
 include/linux/page_counter.h | 1 +
 mm/memcontrol.c              | 2 +-
 2 files changed, 2 insertions(+), 1 deletion(-)

diff --git a/mm/memcontrol.c b/mm/memcontrol.c
index b69979c9ced5..7eadbafc006b 100644
--- a/mm/memcontrol.c
+++ b/mm/memcontrol.c
@@ -625,7 +625,7 @@ static inline void memcg_rstat_updated(struct mem_cgroup *memcg, int val)
 	cgroup_rstat_updated(memcg->css.cgroup, smp_processor_id());
 
 	x = __this_cpu_add_return(stats_updates, abs(val));
-	if (x > MEMCG_CHARGE_BATCH) {
+	if (x > MEMCG_CHARGE_BATCH * 128) {
 		/*
 		 * If stats_flush_threshold exceeds the threshold
 		 * (>num_online_cpus()), cgroup stats update will be triggered
-- 
2.37.3

--- linux-6.1/include/linux/fs.h~	2022-12-11 22:15:18.000000000 +0000
+++ linux-6.1/include/linux/fs.h	2023-02-19 16:28:57.782256604 +0000
@@ -946,6 +946,11 @@
 	struct path		f_path;
 	struct inode		*f_inode;	/* cached value */
 	const struct file_operations	*f_op;
+	errseq_t		f_wb_err;
+	errseq_t		f_sb_err; /* for syncfs */
+	fmode_t			f_mode;
+	struct fown_struct	f_owner;
+	int __pad[12];
 
 	/*
 	 * Protects f_ep, f_flags.
@@ -954,10 +959,8 @@
 	spinlock_t		f_lock;
 	atomic_long_t		f_count;
 	unsigned int 		f_flags;
-	fmode_t			f_mode;
 	struct mutex		f_pos_lock;
 	loff_t			f_pos;
-	struct fown_struct	f_owner;
 	const struct cred	*f_cred;
 	struct file_ra_state	f_ra;
 
@@ -973,8 +976,6 @@
 	struct hlist_head	*f_ep;
 #endif /* #ifdef CONFIG_EPOLL */
 	struct address_space	*f_mapping;
-	errseq_t		f_wb_err;
-	errseq_t		f_sb_err; /* for syncfs */
 } __randomize_layout
   __attribute__((aligned(4)));	/* lest something weird decides that 2 is OK */
 
--- linux-6.1/include/linux/fs.h~	2023-02-19 16:28:57.000000000 +0000
+++ linux-6.1/include/linux/fs.h	2023-02-19 16:34:17.466937390 +0000
@@ -432,12 +432,13 @@
 	atomic_t		nr_thps;
 #endif
 	struct rb_root_cached	i_mmap;
+	errseq_t		wb_err;
+	int pad[14];
 	struct rw_semaphore	i_mmap_rwsem;
 	unsigned long		nrpages;
 	pgoff_t			writeback_index;
 	const struct address_space_operations *a_ops;
 	unsigned long		flags;
-	errseq_t		wb_err;
 	spinlock_t		private_lock;
 	struct list_head	private_list;
 	void			*private_data;
--- linux-6.2/include/linux/fs.h~	2023-02-19 22:24:22.000000000 +0000
+++ linux-6.2/include/linux/fs.h	2023-02-26 18:08:13.890576061 +0000
@@ -952,7 +952,6 @@
 	 * Must not be taken from IRQ context.
 	 */
 	spinlock_t		f_lock;
-	atomic_long_t		f_count;
 	unsigned int 		f_flags;
 	fmode_t			f_mode;
 	struct mutex		f_pos_lock;
@@ -962,6 +961,7 @@
 	struct file_ra_state	f_ra;
 
 	u64			f_version;
+	atomic_long_t		f_count;
 #ifdef CONFIG_SECURITY
 	void			*f_security;
 #endif
